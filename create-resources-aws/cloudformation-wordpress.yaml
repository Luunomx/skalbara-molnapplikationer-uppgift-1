AWSTemplateFormatVersion: "2010-09-09"
Description: >
  WordPress Environment: VPC + 2 AZ, ALB, AutoScaling Group (EC2 + EFS),
  RDS MariaDB, Security Groups. EC2 instanser bootstrappas med WordPress.

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: alb-ec2-key
    Description: EC2 KeyPair
  AllowedSSH:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR for SSH access
  DBName:
    Type: String
    Default: wordpressdb
  DBUser:
    Type: String
    Default: wpadmin
  DBPassword:
    Type: String
    NoEcho: true
    Default: Omega181
  InstanceType:
    Type: String
    Default: t3.micro

Mappings:
  SubnetConfig:
    eu-west-1:
      AZa: eu-west-1a
      AZb: eu-west-1b

Resources:

  # ---------------- VPC & Networking ----------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: [{ Key: Name, Value: wp-vpc }]

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !FindInMap [SubnetConfig, !Ref "AWS::Region", AZa]
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !FindInMap [SubnetConfig, !Ref "AWS::Region", AZb]
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IGWAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  SubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  # ---------------- Security Groups ----------------
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB SG
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 SG
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AllowedSSH

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS SG
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  # ---------------- EFS ----------------
  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      LifecyclePolicies:
        - TransitionToIA: AFTER_7_DAYS

  MountTargetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PublicSubnetA
      SecurityGroups: [!Ref EC2SecurityGroup]

  MountTargetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref PublicSubnetB
      SecurityGroups: [!Ref EC2SecurityGroup]

  # ---------------- RDS (MariaDB) ----------------
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: WP DB subnets
      SubnetIds: [!Ref PublicSubnetA, !Ref PublicSubnetB]

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: mariadb
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      DBName: !Ref DBName
      VPCSecurityGroups: [!Ref RDSSecurityGroup]
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: true
      MultiAZ: false

  # ---------------- ALB ----------------
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: [!Ref PublicSubnetA, !Ref PublicSubnetB]
      SecurityGroups: [!Ref ALBSecurityGroup]

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthCheckPath: /

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup

  # ---------------- Launch Template + ASG ----------------
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-04fc3aeb3378acab2
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds: [!Ref EC2SecurityGroup]
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install -y amazon-efs-utils httpd php php-mysqlnd mariadb

            systemctl enable httpd
            systemctl start httpd

            # Mounta EFS
            mkdir -p /var/www/html
            echo "${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /var/www/html efs defaults,_netdev 0 0" >> /etc/fstab
            mount -a

            cd /var/www/html
            curl -O https://wordpress.org/latest.tar.gz
            tar -xzf latest.tar.gz --strip-components=1
            rm latest.tar.gz

            cp wp-config-sample.php wp-config.php
            sed -i "s/database_name_here/${DBName}/" wp-config.php
            sed -i "s/username_here/${DBUser}/" wp-config.php
            sed -i "s/password_here/${DBPassword}/" wp-config.php
            sed -i "s/localhost/${DBInstance.Endpoint.Address}/" wp-config.php

            # Install WP-CLI
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            mv wp-cli.phar /usr/local/bin/wp

            # Install WordPress
            wp core install \
              --url="http://${ALB.DNSName}" \
              --title="Luunoms site" \
              --admin_user="admin" \
              --admin_password="Omega181" \
              --admin_email="hugohemlin@hotmail.com" \
              --skip-email \
              --path=/var/www/html

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: [!Ref PublicSubnetA, !Ref PublicSubnetB]
      MinSize: 2
      MaxSize: 4
      DesiredCapacity: 2
      TargetGroupARNs: [!Ref ALBTargetGroup]
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber

Outputs:
  ALBDNSName:
    Value: !GetAtt ALB.DNSName
  RDSEndpoint:
    Value: !GetAtt DBInstance.Endpoint.Address
  EFSId:
    Value: !Ref FileSystem
